# docker-compose.yml (using Alpine versions)
# version: "3.9"

services:
  # PostgreSQL (optional, enable later)
  # postgres:
  #   image: postgres:17-alpine
  #   container_name: actserv_postgres
  #   restart: unless-stopped
  #   environment:
  #     POSTGRES_USER: actserv_user
  #     POSTGRES_PASSWORD: actserv_pass
  #     POSTGRES_DB: actserv_db
  #   ports:
  #     - "5432:5432"
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:7-alpine
    container_name: actserv_redis
    restart: unless-stopped
    ports:
      - "6379:6379"

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.alpine
    container_name: actserv_backend
    command: >
      sh -c "python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    volumes:
      - ./backend:/app
    environment:
      DEBUG: "1"
      SECRET_KEY: changeme
      REDIS_URL: redis://redis:6379/0
      EMAIL_BACKEND: django.core.mail.backends.console.EmailBackend
    depends_on:
      - redis
    ports:
      - "8000:8000"

  celery:
    build:
      context: ./backend
      dockerfile: Dockerfile.alpine
    container_name: actserv_celery
    command: celery -A actserv_backend worker -l info
    volumes:
      - ./backend:/app
    environment:
      DEBUG: "1"
      SECRET_KEY: changeme
      REDIS_URL: redis://redis:6379/0
    depends_on:
      - redis

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.alpine
    container_name: actserv_frontend
    command: npm run dev
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: development
    depends_on:
      - backend
# Uncomment when Postgres is enabled
# volumes:
#   postgres_data:
